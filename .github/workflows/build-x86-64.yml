name: build-x86-64

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      rootfs_partsize:
        description: "设置软件包大小 单位(MB)"
        required: false
        default: "1024"
      include_docker:
        description: "是否编译 Docker 插件"
        required: true
        default: "no"
        type: choice
        options:
          - "yes"
          - "no"
env:
  TZ: Asia/Shanghai
  ImageBuilderVersion: x86-64-openwrt-24.10 # 详见https://hub.docker.com/r/immortalwrt/imagebuilder

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        target: [x86-64]

    steps:
      - name: 拉取仓库
        uses: actions/checkout@v4

      - name: 加载自定义配置
        run: |
          chmod +x ${{ github.workspace }}/${{ matrix.target }}/build.sh

      - name: 编译固件
        id: compile
        run: |
          size="${{ github.event.inputs.rootfs_partsize }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          docker run --rm -i \
            --user root \
            -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
            -v "${{ github.workspace }}/files:/home/build/immortalwrt/files" \
            -v "${{ github.workspace }}/x86-64/.config:/home/build/immortalwrt/.config" \
            -v "${{ github.workspace }}/${{ matrix.target }}/build.sh:/home/build/immortalwrt/build.sh" \
            -e ROOTFS_PARTSIZE=$rootfs_partsize \
            -e INCLUDE_DOCKER=$include_docker \
            immortalwrt/imagebuilder:${{ env.ImageBuilderVersion }} /bin/bash /home/build/immortalwrt/build.sh

          echo "COMPILESTATUS=success" >> $GITHUB_ENV

      - name: 整理文件
        id: files
        if: env.COMPILESTATUS == 'success' && !cancelled()
        run: |
          ls -l ${{ github.workspace }}/bin/targets/x86/64/
          mkdir -p ${{ github.workspace }}/dist
          cp /home/build/immortalwrt/.config  ${{ github.workspace }}/dist
          cp ${{ github.workspace }}/bin/targets/x86/64/** ${{ github.workspace }}/dist
          rm -rf ${{ github.workspace }}/dist/*-kernel.bin
          rm -rf ${{ github.workspace }}/dist/*.manifest
          rm -rf ${{ github.workspace }}/dist/*.json
          rm -rf ${{ github.workspace }}/dist/sha256sums
          ls -l ${{ github.workspace }}/dist

      - name: 生成release信息
        id: release_info
        if: env.COMPILESTATUS == 'success' && !cancelled()
        run: |
          echo "release_name=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "${{ matrix.target }} 固件" >> release.txt
          if [ "${{ github.event.inputs.include_docker }}" == "yes" ]; then
            echo "带docker功能" >> release.txt
          fi
          echo "账户：root" >> release.txt
          echo "密码：无" >> release.txt

      - name: 发布固件
        id: release
        if: env.COMPILESTATUS == 'success' && !cancelled()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.target }}⭐️${{ steps.release_info.outputs.release_name }}
          name: ${{ matrix.target }}
          append_body: true
          body_path: release.txt
          files: |
            ${{ github.workspace }}/dist/**
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 清理Workflow
        if: env.COMPILESTATUS == 'success' && !cancelled()
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 0
